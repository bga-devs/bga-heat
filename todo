GUY :

- check "updatePlanification" notif to see if it works correctly when doing Mulligan

- accelerate does not work (tried to fix a bit but without success)
- react buttons on the cards (direct play) are not removed after the react phase
- I think this one should never actually happen if backend send "used" correctly: remove "boost" button on title bar and on cards, it should always be automatically resolved when revealed

- undo : basically copy what you did in Ancient Knowledge

  - add css for notification in the log "Undo here" to stick to next notif with "refresh icon"
    - make them clickable and trigger actUndoToStep
    - show only the clickable one depending on "undoableSteps" entry in onEnteringState (see below) and make sure the other ones are hidden
  - add "undo last step" / "restart turn" buttons whenever relevant : I will always send you "undoableSteps" in the args
    - restart should trigger actRestartTurn
    - undo last step should call actUndoToStep with highest id of the array
    - if the array is empty, do not display any button
  - handle three more notifs (in top of newUndoableStep):
    - clearTurn : strikethrough corresponding notifications (will be deleted on DB so disappear on refresh)
    - refreshUI : public notif containing a subset of getAllDatas, so far only 'players', 'constructors', 'scores', 'progress', you can change that list if needed
    - updateHand : private notif sent to player restarting that contains the array of card in hand, useful (only?) for direct play

- chooseSpeed: handle cases when player have the choice on how to achieve a given speed.
  => use debug newReact. Select brakes 1/2/3/4 and brakes 1/4 for instance.
  => speed 5 can be either achieved by doing 1 + 4 or 4 + 1 and the user should be able to choose
  => you should always skip this choice phase if only one choice is possible
  => you should probably always auto select the first choice and just let the user change the choice if they want to before hitting confirm, since it's a very niche situation

- new podium shapes => will be handled in BE

TIM :

- check undo on some action
- add podium locations of all slots in circuit datas

MISC:

- handle different podium shapes : include podium shape into circuit's data + allow for adhoc placement for extra podium slot for base circuits
  => reconstruct rectangles in frontend with matching font ?
